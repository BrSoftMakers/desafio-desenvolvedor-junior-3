{
  "name": "desafio-desenvolvedor-junior-3",
  "version": "1.0.0",
  "description": "![SoftMakers](https://www.softmakers.com.br/assets/img/logotipo14xxhdpi.png) # Desafio - Desenvolvedor Fullstack Junior 3. Seja bem-vindo! Este desafio foi projetado para avaliar a sua capacidade técnica como candidato à vaga de Desenvolvedor Fullstack Junior 3. ## Instruções - Faça um fork deste repositório; - Utilize alguma das tecnologias (front-end e back-end) informadas na proposta desse desafio; - Crie um passo a passo de como rodar a sua aplicação; - Após finalizar, submeta um pull request com um comentário informando o seu e-mail de contato e aguarde nossa avaliação. ## Proposta Você deverá desenvolver um blog. Para isso, separamos a proposta desse desafio em duas etapas: **Back-end:** Desenvolva uma API utilizando Node JS (ExpressJS ou NestJS) com um dos framework informados, que contenha as seguintes rotas: - `/register` - [POST] - esta rota deve cadastrar um usuário; - `/login` - [POST] - esta rota deve autenticar um usuário; - `/posts` - [POST] - esta rota deve cadastrar uma postagem mantendo a referência do autor. (requer autenticação); - `/posts/{id}` - [PUT] - esta rota deve editar a postagem do ID especificado mantendo a referência do autor. (requer autenticação); - `/posts` - [GET] - esta rota deve retornar a lista de todas as postagens ordenadas das mais recentes para as mais antigas com a possibilidade de inverter esta ordenação e de retornar apenas as postagens do usuário que fez a requisição (requer autenticação); - `/posts/{id}` - [GET] - esta rota deve retornar a postagem do ID especificado com todos os seus dados (requer autenticação); - `/posts/{id}` - [DELETE] - esta rota deve deletar a postagem do ID especificado. **Front-end:** Desenvolva uma aplicação web utilizando o framework front-end react (React cli ou NextJs) e esta deve atender as seguintes histórias: - Eu como usuário desejo me cadastrar; - Eu como usuário desejo realizar login; - Eu como usuário autenticado desejo visualizar todas as postagens; - Eu como usuário autenticado desejo visualizar os detalhes de uma postagem; - Eu como usuário autenticado desejo visualizar todas as minhas postagens; - Eu como usuário autenticado desejo criar uma postagem; - Eu como usuário autenticado desejo editar uma postagem que eu criei; - Eu como usuário autenticado desejo deletar uma postagem que eu criei. > **Observações:** > - Sua aplicação web DEVE se comunicar com sua API; > - Você pode utilizar o banco de dados relacional preferencialmente MySQL ou PostgreSQL com ORM como prisma ou sequelize. ## Diferenciais Será considerado como diferenciais a utilização ou o conhecimento nas seguintes tecnologias: - Sequelize ou prisma - React Native - Firebase - Docker - Cloud bucket storage ( google ou AWS) - Serviços de arquitetura em nuvem do Google ou AWS",
  "main": "index.js",
  "scripts": {
    "dev": "nodemon ./src/server.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/HenriqueSilva367/desafio-desenvolvedor-junior-3.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/HenriqueSilva367/desafio-desenvolvedor-junior-3/issues"
  },
  "homepage": "https://github.com/HenriqueSilva367/desafio-desenvolvedor-junior-3#readme",
  "dependencies": {
    "bcrypt": "^5.1.0",
    "cors": "^2.8.5",
    "dotenv": "^16.0.3",
    "express": "^4.18.2",
    "jsonwebtoken": "^8.5.1",
    "knex": "^2.3.0",
    "pg": "^8.8.0",
    "yup": "^0.32.11"
  },
  "devDependencies": {
    "nodemon": "^2.0.20"
  }
}
